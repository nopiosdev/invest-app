@model TransactionSearchModel
@{
    //page title
    ViewBag.PageTitle = T("Admin.Customers.Transactions").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("Transactions");
}

@{
    const string hideSearchBlockAttributeName = "TransactionPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.Transaction")
    </h1>
    @* <div class="float-right">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
    </div> *@
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default card-search">
                    <div class="card-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="CreatedOnFrom" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="CreatedOnFrom" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="CreatedOnTo" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="CreatedOnTo" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="StatusId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="StatusId" asp-items="Model.AvailableStatus" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="TransactionTypeId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="TransactionTypeId" asp-items="Model.AvailableTransactionType" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="text-center col-12">
                                    <button type="button" id="search-transactions" class="btn btn-primary btn-search">
                                        <i class="fas fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                   {
                       Name = "transactions-grid",
                       UrlRead = new DataUrl("List", "Transaction", null),
                       SearchButtonId = "search-transactions",
                       Length = Model.PageSize,
                       LengthMenu = Model.AvailablePageSizes,
                       Filters = new List<FilterParameter>
                        {
                        new FilterParameter(nameof(Model.CreatedOnFrom)),
                        new FilterParameter(nameof(Model.CreatedOnTo)),
                        new FilterParameter(nameof(Model.StatusId)),
                        new FilterParameter(nameof(Model.TransactionTypeId)),
                        },
                       ColumnCollection = new List<ColumnProperty>
                        {
                        new ColumnProperty(nameof(TransactionModel.CreateOnUtc))
                        {
                        Title = T("Admin.Transaction.Fields.CreateOnUtc").Text,
                        Render = new RenderDate(),
                        },
                        new ColumnProperty(nameof(TransactionModel.FormattedTransactionAmount))
                        {
                        Title = T("Admin.Transaction.Fields.TransactionAmount").Text,
                        Width = "150"
                        },
                        new ColumnProperty(nameof(TransactionModel.StatusString))
                        {
                        Title = T("Admin.Transaction.Fields.Status").Text,
                        Width = "150",
                        Render = new RenderCustom("renderColumnTransactionStatus")
                        },
                        new ColumnProperty(nameof(TransactionModel.TransactionTypeString))
                        {
                        Title = T("Admin.Transaction.Fields.TransactionType").Text,
                        Width = "150"
                        },
                        new ColumnProperty(nameof(TransactionModel.Id))
                        {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "50",
                        ClassName =  NopColumnClassDefaults.Button,
                        Render = new RenderButtonEdit(new DataUrl("Edit"))
                        }
                        }
                   })

                   <script>
                            function renderColumnTransactionStatus(data, type, row, meta) {
                                var color;
                                switch (row.Status) {
                                    case 100:
                                        color = 'green';
                                        break;
                                    case 200:
                                        color = 'yellow';
                                        break;
                                    case 300:
                                        color = 'red';
                                        break;
                                    case 400:
                                        color = 'red';
                                        break;
                                }
                                return '<span class="grid-report-item ' + color + '">' + data + '</span >';
                            }
                   </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>