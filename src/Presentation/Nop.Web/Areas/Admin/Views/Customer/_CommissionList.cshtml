@model CustomerModel

<div class="card-body">
    @await Html.PartialAsync("Table", new DataTablesModel
    {
    Name = "customer-commission-grid",
    UrlRead = new DataUrl("CustomerCommissionList", "Customer",new RouteValueDictionary{[nameof(Model.CustomerCommissionSearchModel.SelectCustomer)] = Model.Id,[nameof(Model.CustomerCommissionSearchModel.UnGrouped)] = true}),
    Length = Model.CustomerCommissionSearchModel.PageSize,
    LengthMenu = Model.CustomerCommissionSearchModel.AvailablePageSizes,
    ColumnCollection = new List<ColumnProperty>
    {
    new ColumnProperty(nameof(CustomerCommissionModel.CreatedOn))
    {
    Title = T("Admin.Customers.CustomerCommissionModel.CreatedOn").Text,
    Render = new RenderDate()
    },
    new ColumnProperty(nameof(CustomerCommissionModel.PaidCustomer))
    {
    Title = T("Admin.Customers.CustomerCommissionModel.PaidCustomer").Text,
    },
    new ColumnProperty(nameof(CustomerCommissionModel.PaidAmount))
    {
    Title = T("Admin.Customers.CustomerCommissionModel.PaidAmount").Text,
    },
    new ColumnProperty(nameof(CustomerCommissionModel.Percentage))
    {
    Title = T("Admin.Customers.CustomerCommissionModel.Percentage").Text
    }
    }
    })
</div>
<div class="card-footer">
    <p id="totalPaidCommission">@T("Admin.Customers.CustomerCommissionModel.TotalPaidCommission"): <span></span></p>
    <button type="submit" id="btnRefreshCustomerCommissionGrid" style="display: none"></button>
    <script>
        // function TotalCommission() {
        //     //refresh grid
        //     updateTable('#customer-commission-grid');

        //     var postData = {
        //         SelectCustomer: $('#@Html.IdFor(model => model.Id)').val(),
        //         UnGrouped: true
        //     };

        //     $.ajax({
        //         cache: false,
        //         type: "POST",
        //         url: "@(Url.Action("CustomerCommissionList", "Customer"))",
        //         data: addAntiForgeryToken(postData),
        //         success: function (data, textStatus, jqXHR) {
        //             console.log(data);
        //             if (data) {
        //                 $('#totalPaidCommission span').text(data.TotalPaidAmount);
        //             }
        //         }
        //     });
        // }
        $(document).ready(function () {
            $('#customer-commission-grid').DataTable().on('draw', function () {
                //refresh grid
                updateTable('#customer-commission-grid');

                var postData = {
                    SelectCustomer: $('#@Html.IdFor(model => model.Id)').val(),
                    UnGrouped: true
                };

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("CustomerCommissionList", "Customer"))",
                    data: addAntiForgeryToken(postData),
                    success: function (data, textStatus, jqXHR) {
                        console.log(data);
                        if (data) {
                            $('#totalPaidCommission span').text(data.TotalPaidAmount);
                        }
                    }
                });

                //return false to don't reload a page
                return false;
            });
        });
    </script>
</div>