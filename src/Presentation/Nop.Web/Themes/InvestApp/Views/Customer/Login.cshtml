@model LoginModel
@using Nop.Core
@using Nop.Core.Domain.Customers


@inject IWebHelper webHelper
@{
    Layout = "_Root.Head";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register", new { returnUrl = this.Context.Request.Query["returnUrl"] }, webHelper.GetCurrentRequestProtocol());
    await Html.RenderPartialAsync("_Notifications");
} 

<script>
  $(document).ready(function () {
    $('.required').on('input keyup click', function () {
        if ($(this).val() === '') {
            $(this).css('border-color', 'red');
        } else {
            $(this).css('border-color', '');
        }
    });
});

</script>

<div class="page login-page">

    <div class="user-layout p-0">
        <div class="row login-wrapper">
            <div class="login-image col-12 col-md-10 col-lg-10 col-xl-10 d-none d-sm-block d-md-block col-12 col-md-10 col-lg-10 col-xl-10 p-0"></div>
            <div class="col-12 col-md-6 col-lg-5 col-xl-6 col-sm-12 col-md-6 col-lg-5 col-xl-6 p-0">
                <div class="login-block">
                    <div>
                        @* <img class="logo-full" src="https://stock-i-app.azurewebsites.net/static/media/logo-full.42727152.svg" alt="Logo"> *@
                    </div>
                    <div class="page-title">
                        <h2 class="heading">@T("Account.Login.Welcome")</h2>
                    </div>
                    <div class="returning-wrapper fieldset">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" autocomplete="off">
                                    <div asp-validation-summary="ModelOnly" class="message-error error-color d-flex">@T("Account.Login.Unsuccessful")</div>
                                    <div class="title">
                                        @* <strong>@T("Account.Login.ReturningCustomer")</strong> *@
                                    </div>
                                    <div class="form-fields">
                                        @if (Model.UsernamesEnabled)
                                        {
                                            <div class="inputs login-inputs">
                                                @* <label asp-for="Username" asp-postfix=":"></label> *@
                                                <input asp-for="Username" class="username" autofocus="autofocus" />
                                                <span asp-validation-for="Username"></span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="inputs login-inputs">
                                            @*  <label asp-for="Email" asp-postfix=":"></label> *@
                                            <span class="input-prefix"><i aria-label="icon: user" class="preicon anticon-user" style="color: rgba(255, 255, 255, 0.5);"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="user" width="14px" height="14px" fill="currentColor" aria-hidden="true"><path d="M858.5 763.6a374 374 0 0 0-80.6-119.5 375.63 375.63 0 0 0-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 0 0-80.6 119.5A371.7 371.7 0 0 0 136 901.8a8 8 0 0 0 8 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 0 0 8-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z"></path></svg></i></span>
                                                <input asp-for="Email" class="email required" autofocus="autofocus"/>
                                                <span asp-validation-for="Email"></span>
                                            </div>
                                        }
                                        <div class="inputs login-inputs reversed">
                                        @*  <label asp-for="Password" asp-postfix=":"></label> *@
                                            <span class="input-prefix"><i aria-label="icon: lock" class="preicon icon-lock" style="color: rgba(255, 255, 255, 0.5);"><svg viewBox="64 64 896 896" focusable="false" class="" data-icon="lock" width="14px" height="14px" fill="currentColor" aria-hidden="true"><path d="M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 1 0-56 0z"></path></svg></i></span>
                                            <input asp-for="Password" class="password required"/>
                                            <span asp-validation-for="Password"></span>
                                        </div>
                                        <div class="inputs reversed">
                                            <input asp-for="RememberMe" />
                                            <label style="font-size:14px; color:#fff;" asp-for="RememberMe"></label>

                                            <div class="buttons">
                                                <a class="button-1 register-button reg-btn" onclick="location.href='@registerUrl'"><span style="color:#fff;">Don't have an account?</span> @T("Account.Register")</a>
                                            </div>

                                            <span class="forgot-password">
                                                <a class="reg-btn" asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a>
                                            </span>
                                        </div>
                                        @if (Model.DisplayCaptcha)
                                        {
                                            <nop-captcha />
                                        }
                                    </div>
                                    <div class="buttons">
                                        <button type="submit" class="button-1 login-button log-btn">@T("Account.Login.LoginButton")</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    @await Html.PartialAsync("_ExternalAuthentication.Errors")
                    <div class="page-body">
                        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.LoginTop, additionalData = Model })
                        <div class="customer-blocks">
                            @if (Model.RegistrationType == UserRegistrationType.Disabled)
                            {
                                <div class="new-wrapper">
                                    <div class="title">
                                        @T("Account.Register")
                                    </div>
                                    <div class="text">
                                        @T("Account.Register.Result.Disabled")
                                    </div>
                                </div>
                            }
                            else if (Model.CheckoutAsGuest)
                            {
                                <div class="new-wrapper checkout-as-guest-or-register-block">
                                    <div class="title">
                                        <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                                    </div>
                                    <div class="text">
                                        @await Component.InvokeAsync(typeof(TopicBlockViewComponent), new { systemName = "CheckoutAsGuestOrRegister" })
                                    </div>
                                    <div class="buttons">
                                        <button type="button" class="button-1 checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'">@T("Account.Login.CheckoutAsGuest")</button>
                                        <button type="button" class="button-1 register-button" onclick="location.href='@registerUrl'">@T("Account.Register")</button>
                                    </div>
                                </div>
                            }
                            @* else
                            {
                                <div class="new-wrapper register-block">
                                    <div class="title">
                                        <strong>@T("Account.Login.NewCustomer")</strong>
                                    </div>
                                    <div class="text">
                                        @T("Account.Login.NewCustomerText")
                                    </div>
                                </div> 

                                    
                            } *@
                            
                        </div>
                        <div class="external-authentication">
                            @await Component.InvokeAsync(typeof(ExternalMethodsViewComponent), "ExternalAuthentication")
                        </div>
                        @* @await Component.InvokeAsync(typeof(TopicBlockViewComponent), new { systemName = "LoginRegistrationInfo" }) *@
                        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.LoginBottom, additionalData = Model })
                    </div>
                </div>
                <div class="footer-links ">
                    <a class="reg-btn" href="/about-us">About</a>|
                    <a class="reg-btn" href="@Url.RouteUrl("ContactUs")">Contact</a>|
                    <a class="reg-btn" href="#">Help</a>
                    
                </div>
                <div class="copyright">
                    <p>
                        Copyright © 2024
                    </p>
                </div>
            </div>
        </div>
    </div>

</div>