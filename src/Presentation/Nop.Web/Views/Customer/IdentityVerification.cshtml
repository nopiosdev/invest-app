@model IdentityVerificationModel
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-change-password-page");
    var returnUrl = Context.Request.Query["returnUrl"];
}

@section left
    {
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.IdentityVerification })
}

<div class="page account-page change-password-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - @T("Account.IdentityVerification")</h1>
    </div>
    <div class="page-body">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerChangePasswordTop, additionalData = Model })
        <form asp-route="CustomerIdentityVerification" method="post" autocomplete="off" asp-route-returnurl="@returnUrl" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>
            <div class="fieldset">
                <div class="form-fields">
                    <div class="inputs">
                        <label asp-for="FormId" asp-postfix=":"></label>
                        <input asp-for="FormId" />
                        <nop-required />
                        <span asp-validation-for="FormId"></span>
                    </div>
                    <div class="inputs">
                        <label asp-for="ProofOfAddress" asp-postfix=":"></label>
                        <input asp-for="ProofOfAddress" />
                        <nop-required />
                        <span asp-validation-for="ProofOfAddress"></span>
                    </div>
                    <div class="inputs">
                        <label asp-for="Document" asp-postfix=":"></label>
                        <input asp-for="Document" />
                        <nop-required />
                        <span asp-validation-for="Document"></span>
                    </div>
                   
                </div>
            </div>
            <div class="buttons">
            <button type="submit" class="button-1 change-password-button">@T("Account.IdentityVerification.Button")</button>
            </div>
        </form>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerChangePasswordBottom, additionalData = Model })
    </div>
</div>
